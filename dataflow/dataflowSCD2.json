{
	"name": "dataflowSCD2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "sourceStage"
				},
				{
					"name": "sourceTarget"
				},
				{
					"name": "sourceMaxSurrogateKey"
				}
			],
			"sinks": [
				{
					"name": "InsertSink"
				},
				{
					"name": "UpdateSink"
				}
			],
			"transformations": [
				{
					"name": "SurrogateKey"
				},
				{
					"name": "JoinForSurrogateKey"
				},
				{
					"name": "DerivedColumnsInsert"
				},
				{
					"name": "ExistsUpdate"
				},
				{
					"name": "DerivedColumnsUpdate"
				},
				{
					"name": "UpdateAlterRow"
				},
				{
					"name": "FilterActiveColumns"
				},
				{
					"name": "SelectOldRecordsOnly"
				}
			],
			"script": "source(output(\n\t\tproduct_id as integer,\n\t\tproduct_name as string,\n\t\tunit_price as double,\n\t\tproduct_desc as string,\n\t\teligible_promotion as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sourceStage\nsource(output(\n\t\tproduct_key as integer,\n\t\tproduct_id as integer,\n\t\tproduct_name as string,\n\t\tunit_price as double,\n\t\tproduct_desc as string,\n\t\teligible_promotion as integer,\n\t\tstart_date as timestamp,\n\t\tend_date as timestamp,\n\t\tactive_flag as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sourceTarget\nsource(output(\n\t\tMaxKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sourceMaxSurrogateKey\nJoinForSurrogateKey keyGenerate(output(SurrogateKeyIncrement as long),\n\tstartAt: 1L,\n\tstepValue: 1L) ~> SurrogateKey\nsourceStage, sourceMaxSurrogateKey join(true(),\n\tjoinType:'cross',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> JoinForSurrogateKey\nSurrogateKey derive(active_flag = 1,\n\t\tstart_date = currentTimestamp(),\n\t\tproduct_key = MaxKey+SurrogateKeyIncrement) ~> DerivedColumnsInsert\nFilterActiveColumns, sourceStage exists(sourceTarget@product_id == sourceStage@product_id,\n\tnegate:false,\n\tbroadcast: 'auto')~> ExistsUpdate\nSelectOldRecordsOnly derive(end_date = currentTimestamp(),\n\t\tactive_flag = 0) ~> DerivedColumnsUpdate\nDerivedColumnsUpdate alterRow(updateIf(true())) ~> UpdateAlterRow\nsourceTarget filter(active_flag==1) ~> FilterActiveColumns\nExistsUpdate, DerivedColumnsInsert exists(sourceTarget@product_key == DerivedColumnsInsert@product_key,\n\tnegate:true,\n\tbroadcast: 'auto')~> SelectOldRecordsOnly\nDerivedColumnsInsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tproduct_id,\n\t\tproduct_key,\n\t\tproduct_name,\n\t\tunit_price,\n\t\tproduct_desc,\n\t\teligible_promotion,\n\t\tstart_date,\n\t\tactive_flag\n\t),\n\tformat: 'table') ~> InsertSink\nUpdateAlterRow sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tproduct_id,\n\t\tproduct_key,\n\t\tproduct_name,\n\t\tunit_price,\n\t\tproduct_desc,\n\t\teligible_promotion,\n\t\tstart_date,\n\t\tend_date,\n\t\tactive_flag\n\t),\n\tformat: 'table') ~> UpdateSink"
		}
	}
}